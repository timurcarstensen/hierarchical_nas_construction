[tool.poetry]
name = "Towards Discovering Neural Architectures Scratch"
version = "0.1.0"
description = "This work proposes an algebraic notion of neural architecture search."
authors = [
    "Simon Schrodi <schrodi@cs.uni-freiburg.de>",
    "Danny Stoll <stolld@cs.uni-freiburg.de>",
    "Binxin Ru <robin@robots.ox.ac.uk>",
    "Rhea Sukthanker <sukthank@cs.uni-freiburg.de>",
    "Thomas Brox <brox@cs.uni-freiburg.de>",
    "Frank Hutter <fh@cs.uni-freiburg.de>",
]
readme = "README.md"
license = "MIT"
packages = [
    { include = "benchmarks" },
    { include = "experiments" },
]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
torch = "^1.11.0"
neps = { git = "https://github.com/timurcarstensen/neps.git", branch = "hnas" }
more-itertools = "^8.12.0"
scipy = "^1.7.3"
pandas = "^1.3.5"
timm = "^0.4.12"
networkx = "^2.6.1"
tqdm = "^4.61.2"
nltk = "^3.6.3"
path = "^16.0.0"
torchmetrics = "^0.8.1"
tensorboard = "^2.9.0"
debugpy = "^1.4.1"
tensorwatch = "^0.9.1"
hydra-core = "^1.3.2"

[tool.poetry.dev-dependencies]
jupyter = "^1.0"
ruff = "^0.5.1"
pre-commit = "^2.10"

[tool.ruff]
target-version = "py310"
line-length = 88
output-format = "full"
src = ["experiments", "configs", "benchmarks"]

[tool.ruff.isort]
detect-same-package = false

[tool.ruff.lint]
# Extend what ruff is allowed to fix, even it it may break
# This is okay given we use it all the time and it ensures
# better practices. Would be dangerous if using for first
# time on established project.
extend-safe-fixes = ["ALL"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = ["E4", "E7", "E9", "F", "I"]
ignore = [
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic mthod
    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line between summary and description
    "D401", # First line of docstring should be in imperative mood
    "N806", # Variable X in function should be lowercase
    "E731", # Do not assign a lambda expression, use a def
    "A003", # Shadowing a builtin
    "S101", # Use of assert detected.
    "W292", # No newline at end of file
    "PLC1901", # "" can be simplified to be falsey
    "TCH003", # Move stdlib import into TYPE_CHECKING
    "B010", # Do not use `setattr`
    "PD011", # Use .to_numpy() instead of .values  (triggers on report.values)
    "E741"
    # These tend to be lighweight and confuse pyright
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
